# yaml-language-server: $schema=https://raw.githubusercontent.com/swarmlibs/dockerstack-schema/main/schema/dockerstack-spec.json

x-replicas: &x-replicas 3

x-deploy: &x-deploy
  replicas: *x-replicas

services:
  server:
    image: swarmlibs/hashicorp-vault:local
    entrypoint: /dockerswarm-entrypoint.sh
    command: server
    environment:
      # Specifies the identifier for the Vault cluster
      VAULT_CLUSTER_NAME:
      # Specifies the address (full URL) to advertise to other Vault servers in the cluster for
      # client redirection to this node when in High Availability mode. (default to VAULT_CLUSTER_ADDR value)
      # You can set either one of these values, the priority is as follows:
      VAULT_API_ADDR:
      VAULT_REDIRECT_ADDR:
      # !!! DO NOT CHANGE THIS VALUES BELOW !!!
      # Default values for VAULT_ADVERTISE_ADDR & VAULT_CLUSTER_ADDR
      VAULT_ADVERTISE_ADDR: http://replica-{{.Task.Slot}}.vault.svc.cluster.local:8200
      VAULT_CLUSTER_ADDR: http://replica-{{.Task.Slot}}.vault.svc.cluster.local:8201
      VAULT_STORAGE_BOOTSTRAP_EXPECT: *x-replicas
      # Docker Swarm service template variables
      DOCKERSWARM_SERVICE_ID: "{{.Service.ID}}"
      DOCKERSWARM_SERVICE_NAME: "{{.Service.Name}}"
      DOCKERSWARM_NODE_ID: "{{.Node.ID}}"
      DOCKERSWARM_NODE_HOSTNAME: "{{.Node.Hostname}}"
      DOCKERSWARM_TASK_ID: "{{.Task.ID}}"
      DOCKERSWARM_TASK_NAME: "{{.Task.Name}}"
      DOCKERSWARM_TASK_SLOT: "{{.Task.Slot}}"
      DOCKERSWARM_STACK_NAMESPACE: '{{ index .Service.Labels "com.docker.stack.namespace" }}'
    hostname: replica-{{.Task.Slot}}.vault.svc.cluster.local
    # ports:
    #   - published: 8200
    #     target: 8200
    networks:
      vault:
      prometheus:
    volumes:
      - type: volume
        source: vault-file
        target: /vault/file
    cap_add:
      - IPC_LOCK
    deploy:
      <<: *x-deploy
      labels:
        io.prometheus.enabled: "true"
        io.prometheus.job_name: "vault"
        io.prometheus.metrics_path: "/v1/sys/metrics"
        io.prometheus.scrape_port: "8200"
        io.prometheus.param_format: "prometheus"
      restart_policy:
        condition: on-failure
        delay: 5s
        max_attempts: 3
        window: 120s
      update_config:
        order: stop-first
        monitor: 120s
        parallelism: 1
        failure_action: pause
        max_failure_ratio: 0.1
      rollback_config:
        order: stop-first
        parallelism: 1
        monitor: 120s
        failure_action: pause
        max_failure_ratio: 0.1

  ingress:
    image: caddy:2.8
    networks:
      vault:
    ports:
      - published: 8200
        target: 8200
        protocol: tcp
        mode: host
    configs:
      - source: Caddyfile
        target: /etc/caddy/Caddyfile

configs:
  Caddyfile:
    name: Caddyfile-v1
    file: ./Caddyfile

volumes:
  vault-file:
    name: '{{.Service.Name}}_data_{{.Task.Slot}}'

networks:
  vault:
  prometheus:
    name: prometheus
    external: true
